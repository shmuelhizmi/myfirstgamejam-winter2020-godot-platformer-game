[gd_resource type="VisualShader" load_steps=10 format=2]

[ext_resource path="res://assets/noise/noise_texture.tres" type="Texture" id=1]

[sub_resource type="VisualShaderNodeInput" id=1]
output_port_for_preview = 0
input_name = "uv"

[sub_resource type="VisualShaderNodeInput" id=2]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarFunc" id=3]
function = 0

[sub_resource type="VisualShaderNodeScalarOp" id=4]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 3

[sub_resource type="VisualShaderNodeScalarOp" id=5]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.5 ]

[sub_resource type="VisualShaderNodeTexture" id=6]
output_port_for_preview = 0
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeScalarOp" id=7]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeScalarFunc" id=8]
output_port_for_preview = 0
function = 14

[resource]
code = "shader_type canvas_item;
uniform sampler2D tex_frg_7;


void vertex() {
// Output:0

}

void fragment() {
// Texture:7
	vec3 n_out7p0;
	float n_out7p1;
	vec4 tex_frg_7_read = texture( tex_frg_7 , UV.xy );
	n_out7p0 = tex_frg_7_read.rgb;
	n_out7p1 = tex_frg_7_read.a;

// ScalarFunc:4
	float n_in4p0 = 0.00000;
	float n_out4p0;
	n_out4p0 = sin(n_in4p0);

// ScalarOp:5
	float n_in5p1 = 2.00000;
	float n_out5p0;
	n_out5p0 = n_out4p0 / n_in5p1;

// ScalarOp:6
	float n_in6p1 = 0.50000;
	float n_out6p0;
	n_out6p0 = n_out5p0 + n_in6p1;

// ScalarOp:8
	float n_out8p0;
	n_out8p0 = dot(n_out7p0,vec3(0.333333,0.333333,0.333333)) + n_out6p0;

// ScalarFunc:9
	float n_out9p0;
	n_out9p0 = floor(n_out8p0);

// Output:0
	COLOR.a = n_out9p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 418, 31.75 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 1260, 120 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( 100, 220 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( 60, 420 )
nodes/fragment/4/node = SubResource( 3 )
nodes/fragment/4/position = Vector2( 260, 420 )
nodes/fragment/5/node = SubResource( 4 )
nodes/fragment/5/position = Vector2( 480, 400 )
nodes/fragment/6/node = SubResource( 5 )
nodes/fragment/6/position = Vector2( 680, 400 )
nodes/fragment/7/node = SubResource( 6 )
nodes/fragment/7/position = Vector2( 700, 80 )
nodes/fragment/8/node = SubResource( 7 )
nodes/fragment/8/position = Vector2( 900, 340 )
nodes/fragment/9/node = SubResource( 8 )
nodes/fragment/9/position = Vector2( 1020, 220 )
nodes/fragment/connections = PoolIntArray( 4, 0, 5, 0, 5, 0, 6, 0, 6, 0, 8, 1, 7, 0, 8, 0, 8, 0, 9, 0, 9, 0, 0, 1 )
